name: Java CI with Gradle

on:
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test
        env:
          ACTIVE_PROFILE: ${{ secrets.ACTIVE_PROFILE }}
          DATASOURCE_URL_LOCAL: ${{ secrets.DATASOURCE_URL_LOCAL }}
          DATASOURCE_USERNAME: ${{ secrets.DATASOURCE_USERNAME }}
          DATASOURCE_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}
          DATASOURCE_URL_DEV: ${{ secrets.DATASOURCE_URL_DEV }}
          DATASOURCE_URL_PROD: ${{ secrets.DATASOURCE_URL_PROD }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          KAKAO_API_KEY: ${{ secrets.KAKAO_API_KEY }}
          KAKAO_REDIRECT_URI: ${{ secrets.KAKAO_REDIRECT_URI }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
          GOOGLE_APP_PASSWORD: ${{ secrets.GOOGLE_APP_PASSWORD }}
          GOOGLE_EMAIL: ${{ secrets.GOOGLE_EMAIL }}
          MAIL_REQUEST_URI: ${{ secrets.MAIL_REQUEST_URI }}
          GOOGLE_CLIENT_NAME: ${{ secrets.GOOGLE_CLIENT_NAME }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECERT: ${{ secrets.GOOGLE_CLIENT_SECERT }}
          GOOGLE_REDIRECT_URI: ${{ secrets.GOOGLE_REDIRECT_URI }}
          GOOGLE_AUTHORIZATION_TYPE: ${{ secrets.GOOGLE_AUTHORIZATION_TYPE }}
          GOOGLE_SCOPE: ${{ secrets.GOOGLE_SCOPE }}
          GOOGLE_CALLBACK_URI: ${{ secrets.GOOGLE_CALLBACK_URI }}
      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: app-artifact
          path: build/libs/backend-0.0.1-SNAPSHOT.jar
          retention-days: 1

  docker-build:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permisson for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test


      - name: Docker Hub build & push
        run: |
          sudo docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PWD }}
          sudo docker build --no-cache --build-arg ACTIVE_PROFILE=${{ secrets.ACTIVE_PROFILE }} \
          --build-arg DATASOURCE_URL_LOCAL=${{ secrets.DATASOURCE_URL_LOCAL }} \
          --build-arg DATASOURCE_USERNAME=${{ secrets.DATASOURCE_USERNAME }} \
          --build-arg DATASOURCE_PASSWORD=${{ secrets.DATASOURCE_PASSWORD }} \
          --build-arg DATASOURCE_URL_DEV=${{ secrets.DATASOURCE_URL_DEV }} \
          --build-arg DATASOURCE_URL_PROD=${{ secrets.DATASOURCE_URL_PROD }} \
          --build-arg JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
          --build-arg REGION=${{ secrets.REGION }} \
          --build-arg KAKAO_API_KEY=${{ secrets.KAKAO_API_KEY }} \
          --build-arg KAKAO_REDIRECT_URI=${{ secrets.KAKAO_REDIRECT_URI }} \
          --build-arg REDIS_HOST=${{ secrets.REDIS_HOST }} \
          --build-arg REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} \
          --build-arg REDIS_PORT=${{ secrets.REDIS_PORT }} \
          --build-arg ACCESS_KEY=${{ secrets.ACCESS_KEY }} \
          --build-arg SECRET_KEY=${{ secrets.SECRET_KEY }} \
          --build-arg BUCKET_NAME=${{ secrets.BUCKET_NAME }} \
          --build-arg GOOGLE_APP_PASSWORD=${{ secrets.GOOGLE_APP_PASSWORD }} \
          --build-arg GOOGLE_EMAIL=${{ secrets.GOOGLE_EMAIL }} \
          --build-arg MAIL_REQUEST_URI=${{ secrets.MAIL_REQUEST_URI }} \
          --build-arg GOOGLE_CLIENT_NAME=${{ secrets.GOOGLE_CLIENT_NAME }} \
          --build-arg GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} \
          --build-arg GOOGLE_CLIENT_SECERT=${{ secrets.GOOGLE_CLIENT_SECERT }} \
          --build-arg GOOGLE_REDIRECT_URI=${{ secrets.GOOGLE_REDIRECT_URI }} \
          --build-arg GOOGLE_AUTHORIZATION_TYPE=${{ secrets.GOOGLE_AUTHORIZATION_TYPE }} \
          --build-arg GOOGLE_SCOPE=${{ secrets.GOOGLE_SCOPE }} \
          --build-arg GOOGLE_CALLBACK_URI=${{ secrets.GOOGLE_CALLBACK_URI }} \
           -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPO_NAME }}:v1 .
          sudo docker images
          sudo docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPO_NAME }}:v1
          

      - name: Deploy to prod
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.WAS_HOST }}
          key: ${{ secrets.WAS_PRIVATE_KEY }}
          port: ${{ secrets.WAS_PORT }}
          script: |
            sudo docker ps
            sudo docker rm -f $(sudo docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPO_NAME }}:v1
            sudo docker run -d -p 9000:9000 ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPO_NAME }}:v1
            sudo docker image prune -f
